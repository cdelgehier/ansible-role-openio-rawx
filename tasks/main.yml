# roles/rawx/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_rawx_namespace }}"
    - path: "{{ openio_rawx_volume }}"
    - path: "/var/lib/oio/sds/{{ openio_rawx_namespace }}/coredump"
    - path: "{{ openio_rawx_sysconfig_dir }}/{{ openio_rawx_servicename }}"
    - path: "{{ openio_rawx_pid_directory }}"
    - path: "/etc/oio/sds/{{ openio_rawx_namespace }}/watch"
    - path: "/var/log/oio/sds/{{ openio_rawx_namespace }}/{{ openio_rawx_servicename }}"
      owner: "{{ syslog_user }}"
      mode: "0770"
  tags: configure

- name: Ensure pid directory is persistant
  lineinfile:
    dest: /etc/tmpfiles.d/rawx.conf
    create: true
    line: "d {{ openio_rawx_pid_directory }} 755 openio openio -"
    owner: openio
    group: openio
    mode: 0644
  when: openio_rawx_pid_directory.split(' ')[0] | dirname is match("/run/.*")
  tags: configure

- name: "Include tasks for {{ openio_rawx_state }} state"
  include_tasks: "{{ openio_rawx_state }}.yml"
  tags: configure
<<<<<<< HEAD

- name: "restart rawx to apply the new configuration"
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{ openio_rawx_namespace }}-{{ openio_rawx_servicename }}
  register: _restart_rawx
  when:
    - _rawx_conf is changed
    - not openio_rawx_provision_only
  tags: configure

- block:
    - name: "Ensure rawx is started"
      command: gridinit_cmd start {{ openio_rawx_namespace }}-{{ openio_rawx_servicename }}
      register: _start_rawx
      changed_when: '"Success" in _start_rawx.stdout'
      when:
        - not openio_rawx_provision_only
        - _restart_rawx is skipped
      tags: configure

    - name: check rawx
      uri:
        url: "http://{{ openio_rawx_bind_address }}:{{ openio_rawx_bind_port }}/info"
        return_content: true
        status_code: 200
      register: _rawx_check
      retries: 15
      delay: 1
      until: _rawx_check is success
      changed_when: false
      tags: configure
      when:
        - not openio_rawx_provision_only
  when: openio_bootstrap | d(false)
=======
>>>>>>> bbae09a... FEATURE(rawx): Add `openio_rawx_state`
...
